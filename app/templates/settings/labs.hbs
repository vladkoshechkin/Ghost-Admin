<section class="gh-canvas">
    <header class="gh-canvas-header">
        <h2 class="gh-canvas-title" data-test-screen-title>Labs</h2>
    </header>

    <section class="view-container settings-debug">
        <p class="gh-box gh-box-info">{{svg-jar "idea"}}Это испытательный полигон для экспериментальных функций, которые еще не готовы к прайм-тайму. Они могут измениться, сломаться или необъяснимо исчезнуть в любое время.</p>

        <div class="gh-setting-header">Варианты миграций</div>
        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Импортировать контент</div>
                <div class="gh-setting-desc">Импорт сообщений из другой установки Ghost</div>
            </div>
            <div class="gh-setting-action">
                <form id="settings-import" enctype="multipart/form-data">
                    {{gh-file-upload
                        id="importfile"
                        classNames="flex"
                        uploadButtonText=uploadButtonText
                        onUpload=(action "onUpload")
                        acceptEncoding=importMimeType
                        data-test-file-input="import"}}
                </form>
            </div>
        </div>

        {{#if importErrors}}
            <div class="gh-import-errors {{if importSuccessful "gh-import-errors-warning"}}" data-test-import-errors>
                <div class="gh-import-errors-title">
                    {{#if importSuccessful}}
                        Успешно импортировано с предупреждениями
                    {{else}}
                        Не удалось импортировать
                    {{/if}}
                </div>

                {{#each importErrors as |error|}}
                    <div class="gh-import-error" data-test-import-error>
                        <p class="gh-import-error-message" data-test-import-error-message>
                            {{#if error.help}}{{error.help}}: {{/if}}{{error.message}}
                        </p>

                        {{#if error.context}}
                            <div class="gh-import-error-entry" data-test-import-error-context>
                                <pre>{{error.context}}</pre>
                            </div>
                        {{/if}}
                    </div>
                {{/each}}
            </div>
        {{/if}}

        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Экспортировать ваш контент</div>
                <div class="gh-setting-desc">Загрузите все свои сообщения и настройки в одном великолепном файле JSON</div>
            </div>
            <div class="gh-setting-action">
                <button type="button" class="gh-btn gh-btn-hover-blue" {{action "downloadFile" "db"}}><span>Экспорт</span></button>
            </div>
        </div>
        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Удалить весь контент</div>
                <div class="gh-setting-desc">Безвозвратно удалить все посты и теги из базы данных, сделать полный сброс</div>
            </div>
            <div class="gh-setting-action">
                <button type="button" class="gh-btn gh-btn-hover-red js-delete" {{action "toggleDeleteAllModal"}}><span>Удалить</span></button>
            </div>
        </div>

        <div class="gh-setting-header">Инструменты тестирования</div>
        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Тестовая конфигурация электронной почты</div>
                <div class="gh-setting-desc">Отправьте себе тестовое письмо, чтобы убедиться, что все работает</div>
            </div>
            <div class="gh-setting-action">
                {{gh-task-button "Send" successText="Sent" task=sendTestEmail class="gh-btn gh-btn-hover-blue gh-btn-icon"}}
            </div>
        </div>

        <div class="gh-setting-header">Beta features</div>
        {{#if (not-eq feature.labs.publicAPI undefined)}}
            <div class="gh-setting">
                <div class="gh-setting-content">
                <div class="gh-setting-title">Public API (deprecated)</div>
                <div class="gh-setting-desc">⚠️ Пожалуйста, используйте Content API вместо этого, больше информации в <a href="https://docs.ghost.org/api/content/">документации</a></div>
                </div>
                <div class="gh-setting-action">
                    <div class="for-checkbox">{{gh-feature-flag "publicAPI"}}</div>
                </div>
            </div>
        {{/if}}
        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Night shift</div>
                <div class="gh-setting-desc">Поменяйте цвета админа Ghost на темный фон, который приятнее для глаз</div>
            </div>
            <div class="gh-setting-action">
                <div class="for-checkbox">{{gh-feature-flag "nightShift"}}</div>
            </div>
        </div>
        <div class="gh-setting">
            <div class="gh-setting-content">
                <div class="gh-setting-title">Подписчики</div>
                <div class="gh-setting-desc">Сбор адресов электронной почты от ваших подписиков, больше информации в <a href="https://docs.ghost.org/faq/enable-subscribers-feature/">документации</a></div>
            </div>
            <div class="gh-setting-action">
                <div class="for-checkbox">{{gh-feature-flag "subscribers"}}</div>
            </div>
        </div>
        <div class="gh-setting">
            {{#gh-uploader
                extensions=jsonExtension
                uploadUrl="/redirects/json/"
                paramName="redirects"
                onUploadSuccess=(perform redirectUploadResult true)
                onUploadFailure=(perform redirectUploadResult false)
                as |uploader|
            }}
            <div class="gh-setting-content">
                <div class="gh-setting-title">Redirects</div>
                <div class="gh-setting-desc">Настроить перенаправления для старого или перемещенного контента, больше информации в <a href="https://docs.ghost.org/tutorials/implementing-redirects/">документации</a></div>
                {{#each uploader.errors as |error|}}
                    <div class="gh-setting-error" data-test-error="redirects">{{error.message}}</div>
                {{/each}}
            </div>
            <div class="gh-setting-action" style="display: flex; flex-direction: column">
                {{#if uploader.isUploading}}
                    {{uploader.progressBar}}
                {{else}}
                    <button
                        type="button"
                        class="gh-btn gh-btn-icon {{if redirectSuccess "gh-btn-green"}} {{if redirectFailure "gh-btn-red"}}"
                        onclick={{action "triggerFileDialog"}}
                        data-test-button="upload-redirects"
                    >
                        <span>
                            {{#if redirectSuccess}}
                                {{svg-jar "check-circle"}} Uploaded
                            {{else if redirectFailure}}
                                {{svg-jar "retry"}} Upload Failed
                            {{else}}
                                Upload redirects JSON
                            {{/if}}
                        </span>
                    </button>
                    <span><a href="#" {{action "downloadFile" "redirects/json"}} data-test-link="download-redirects">Скачать текущие перенаправления</a></span>
                {{/if}}

                <div style="display:none">
                    {{gh-file-input multiple=false action=uploader.setFiles accept=jsonMimeType data-test-file-input="redirects"}}
                </div>
            </div>
            {{/gh-uploader}}
        </div>
        <div class="gh-setting">
            {{#gh-uploader
                extensions=yamlExtension
                uploadUrl="/settings/routes/yaml/"
                paramName="routes"
                onUploadSuccess=(perform routesUploadResult true)
                onUploadFailure=(perform routesUploadResult false)
                as |uploader|
            }}
            <div class="gh-setting-content">
                <div class="gh-setting-title">Маршруты</div>
                <div class="gh-setting-desc">Настройте динамическую маршрутизацию, изменив routes.yaml файл</div>
                {{#each uploader.errors as |error|}}
                    <div class="gh-setting-error" data-test-error="routes">{{error.message}}</div>
                {{/each}}
            </div>
            <div class="gh-setting-action" style="display: flex; flex-direction: column">
                {{#if uploader.isUploading}}
                    {{uploader.progressBar}}
                {{else}}
                    <button
                        type="button"
                        class="gh-btn gh-btn-icon {{if routesSuccess "gh-btn-green"}} {{if routesFailure "gh-btn-red"}}"
                        onclick={{action "triggerFileDialog"}}
                        data-test-button="upload-routes"
                    >
                        <span>
                            {{#if routesSuccess}}
                                {{svg-jar "check-circle"}} Загружено
                            {{else if routesFailure}}
                                {{svg-jar "retry"}} Загрузка не удалась
                            {{else}}
                                Загрузить маршруты YAML
                            {{/if}}
                        </span>
                    </button>
                    <span><a href="#" {{action "downloadFile" "settings/routes/yaml"}} data-test-link="download-routes">Скачать актуальный routes.yml</a></span>
                {{/if}}

                <div style="display:none">
                    {{gh-file-input multiple=false action=uploader.setFiles accept=yamlMimeType data-test-file-input="routes"}}
                </div>
            </div>
            {{/gh-uploader}}
        </div>
    </section>
</section>

{{#if showDeleteAllModal}}
    {{gh-fullscreen-modal "delete-all"
                          close=(action "toggleDeleteAllModal")
                          modifier="action wide"}}
{{/if}}
